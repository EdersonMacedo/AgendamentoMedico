package br.com.model.view;

import br.com.model.controller.ConsultaController;
import br.com.model.paciente.Consulta;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ederson
 */
public class ConsultaListaGUI extends javax.swing.JFrame {

    private JTable tabela = new JTable();
    private DefaultTableModel modelo = new DefaultTableModel();

    public ConsultaListaGUI() {
        initComponents();
        criaJTable();
        PainelRolagem.setViewportView(tabela);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PainelSuperior = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        PainelInferior = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PainelRolagem = new javax.swing.JScrollPane();
        btInserir = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        Calendario = new com.toedter.calendar.JCalendar();
        btPesquisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txPesqNome = new javax.swing.JTextField();
        btOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agenda MÃ©dica[EMJ]");

        PainelSuperior.setBackground(new java.awt.Color(0, 153, 153));

        jLabel3.setText("Consulta");

        javax.swing.GroupLayout PainelSuperiorLayout = new javax.swing.GroupLayout(PainelSuperior);
        PainelSuperior.setLayout(PainelSuperiorLayout);
        PainelSuperiorLayout.setHorizontalGroup(
            PainelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelSuperiorLayout.setVerticalGroup(
            PainelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        PainelInferior.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/model/images/Java.png"))); // NOI18N

        javax.swing.GroupLayout PainelInferiorLayout = new javax.swing.GroupLayout(PainelInferior);
        PainelInferior.setLayout(PainelInferiorLayout);
        PainelInferiorLayout.setHorizontalGroup(
            PainelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelInferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        PainelInferiorLayout.setVerticalGroup(
            PainelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelInferiorLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        PainelRolagem.setBackground(new java.awt.Color(255, 255, 255));

        btInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/model/images/Cadastro.png"))); // NOI18N
        btInserir.setText("Inserir");
        btInserir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btInserir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInserirActionPerformed(evt);
            }
        });

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/model/images/Editar.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/model/images/Delete.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        Calendario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CalendarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CalendarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CalendarioMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CalendarioMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CalendarioMouseReleased(evt);
            }
        });

        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        jLabel2.setText("Pesquisar por nome:");

        txPesqNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txPesqNomeActionPerformed(evt);
            }
        });
        txPesqNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txPesqNomeKeyPressed(evt);
            }
        });

        btOk.setText("Ok");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PainelSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PainelInferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(Calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btPesquisar)
                                .addGap(82, 82, 82)
                                .addComponent(btInserir)
                                .addGap(14, 14, 14)
                                .addComponent(btEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btExcluir))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btOk)))
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addComponent(PainelRolagem, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(PainelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btEditar)
                                    .addComponent(btExcluir))
                                .addComponent(btInserir))
                            .addComponent(Calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txPesqNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btOk))
                        .addGap(26, 26, 26)))
                .addComponent(PainelRolagem, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PainelInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirActionPerformed

        System.out.println("\n\nCodigo do Inserir");
        int linhaSelecionada = -1;
        linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada >= 0) {
            int idConsulta = (int) tabela.getValueAt(linhaSelecionada, 0);
            System.out.println("idCOnsulta: " + idConsulta);
            String tipoConsulta = (String) tabela.getValueAt(linhaSelecionada, 4);
            System.out.println("Tipo de consulta: " + tipoConsulta);
            ConsultaInserirGUI pi = new ConsultaInserirGUI(modelo, linhaSelecionada, idConsulta);
            pi.setTitle("Inseir Consulta[EMJ]");
        } else {
            JOptionPane.showMessageDialog(this, "Nehuma linha foi selecionada.");
        }
    }//GEN-LAST:event_btInserirActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        
        System.out.println("\n\nCodigo do Excluir");
        int linhaSelecionada = -1;
        linhaSelecionada = tabela.getSelectedRow();

        if (linhaSelecionada >= 0) {
            int i = (JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir esse funcionÃ¡rio permanentemente?", "Excluir funcionÃ¡rio", JOptionPane.YES_NO_OPTION));
            if (i == 0) {
                int idConsulta = (int) tabela.getValueAt(linhaSelecionada, 0);
                System.out.println("idCOnsulta: " + idConsulta);
                ConsultaInserirGUI pi = new ConsultaInserirGUI(linhaSelecionada, modelo, idConsulta);

            } else {
                JOptionPane.showMessageDialog(this, "Nehuma linha foi selecionada.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "ExclusÃ£o Cancelada");
        }

        preencherJTableData(Calendario.getDate());
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        
        System.out.println("\n\nCodigo do Editar");
        int linhaSelecionada = -1;
        linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada >= 0) {
            int idConsulta = (int) tabela.getValueAt(linhaSelecionada, 0);
            ConsultaInserirGUI pi = new ConsultaInserirGUI(linhaSelecionada, idConsulta, modelo);
            pi.setTitle("Editar Consulta[EMJ]");
        } else {
            JOptionPane.showMessageDialog(this, "Nehuma linha foi selecionada.");
        }
        preencherJTableData(Calendario.getDate());
    }//GEN-LAST:event_btEditarActionPerformed

    private void CalendarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalendarioMouseClicked

    }//GEN-LAST:event_CalendarioMouseClicked

    private void CalendarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalendarioMousePressed

    }//GEN-LAST:event_CalendarioMousePressed

    private void CalendarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalendarioMouseEntered

    }//GEN-LAST:event_CalendarioMouseEntered

    private void CalendarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalendarioMouseExited

    }//GEN-LAST:event_CalendarioMouseExited

    private void CalendarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalendarioMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_CalendarioMouseReleased

    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        preencherJTableData(Calendario.getDate());
    }//GEN-LAST:event_btPesquisarActionPerformed

    private void txPesqNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txPesqNomeActionPerformed
        String nome = txPesqNome.getText();
        ConsultaController pc
                = new ConsultaController();
        modelo.setNumRows(0);
        for (Consulta p : pc.listByNome(nome)) {
            String data = "";
            String hora = "";
            String linome = "";
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
                hora = sdf.format(p.getHorario());
            } catch (Exception ex) {
                System.out.println("Entrou na excessÃ£o Hora: " + ex.getMessage());
                hora = "";
            }
            try {
                SimpleDateFormat sdfd = new SimpleDateFormat("dd/MM/yyyy");
                data = sdfd.format(p.getDataDaConsulta().getTime());
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());
                data = "";
            }
            try {
                linome = p.getPaciente().getNome();
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());

            }
            if(!linome.equals(" ")){
                System.out.println("Nome:"+linome+":");
                       
            modelo.addRow(new Object[]{p.getCodigo(), hora, data, linome, p.getTipoConsulta()});
            }
        }
    }//GEN-LAST:event_txPesqNomeActionPerformed

    private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
        String nome = txPesqNome.getText();
        ConsultaController pc
                = new ConsultaController();
        modelo.setNumRows(0);
        for (Consulta p : pc.listByNome(nome)) {
            String data = "";
            String hora = "";
            String linome = "";
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
                hora = sdf.format(p.getHorario());
            } catch (Exception ex) {
                System.out.println("Entrou na excessÃ£o Hora: " + ex.getMessage());
                hora = "";
            }
            try {
                SimpleDateFormat sdfd = new SimpleDateFormat("dd/MM/yyyy");
                data = sdfd.format(p.getDataDaConsulta().getTime());
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());
                data = "";
            }
            try {
                linome = p.getPaciente().getNome();
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());

            }
            if(!linome.equals(" ")){
                System.out.println("Nome:"+linome+":");
                       
            modelo.addRow(new Object[]{p.getCodigo(), hora, data, linome, p.getTipoConsulta()});
            }
        }
    }//GEN-LAST:event_btOkActionPerformed

    private void txPesqNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txPesqNomeKeyPressed
           String nome = txPesqNome.getText();
           if(nome.length()>0){
        ConsultaController pc
                = new ConsultaController();
        modelo.setNumRows(0);
        for (Consulta p : pc.listByNome(nome)) {
            String data = "";
            String hora = "";
            String linome = "";
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
                hora = sdf.format(p.getHorario());
            } catch (Exception ex) {
                System.out.println("Entrou na excessÃ£o Hora: " + ex.getMessage());
                hora = "";
            }
            try {
                SimpleDateFormat sdfd = new SimpleDateFormat("dd/MM/yyyy");
                data = sdfd.format(p.getDataDaConsulta().getTime());
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());
                data = "";
            }
            try {
                linome = p.getPaciente().getNome();
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());

            }
            if(!linome.equals(" ")){
                System.out.println("Nome:"+linome+":");
                       
            modelo.addRow(new Object[]{p.getCodigo(), hora, data, linome, p.getTipoConsulta()});
            }
        }
    }
    }//GEN-LAST:event_txPesqNomeKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar Calendario;
    private javax.swing.JPanel PainelInferior;
    private javax.swing.JScrollPane PainelRolagem;
    private javax.swing.JPanel PainelSuperior;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btInserir;
    private javax.swing.JButton btOk;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txPesqNome;
    // End of variables declaration//GEN-END:variables

    private void criaJTable() {
        tabela = new JTable(modelo);
        modelo.addColumn("CÃ³digo");
        modelo.addColumn("HorÃ¡rios");
        modelo.addColumn("Data da consulta");
        modelo.addColumn("Nome");
        modelo.addColumn("Tipo De Consulta");

        long time = System.currentTimeMillis();
        java.sql.Timestamp datahora = new Timestamp(time);
        GregorianCalendar calendar = new GregorianCalendar();
        calendar.setTime(datahora);
        datahora = new Timestamp(calendar.getTimeInMillis());
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        System.out.println("DATE TIME");
        preencherJTableData(datahora);
    }

    private void preencherJTableData(Date dataInfo) {

        carregarJTable();
        final int I = 0;
        ConsultaController uc = new ConsultaController();
        modelo.setRowCount(I);
        PainelRolagem.setViewportView(tabela);
        System.out.println("getRowCount ");
        tabela.updateUI();
        PainelRolagem.setViewportView(tabela);
        
        for (Consulta f : uc.listPorDate(dataInfo)) {
            String data = "";
            String hora = "";
            String nome = "";
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
                hora = sdf.format(f.getHorario());
            } catch (Exception ex) {
                System.out.println("Entrou na excessÃ£o Hora: " + ex.getMessage());
                hora = "";
            }
            try {
                SimpleDateFormat sdfd = new SimpleDateFormat("dd/MM/yyyy");
                data = sdfd.format(f.getDataDaConsulta().getTime());
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());
                data = "";
            }
            try {
                nome = f.getPaciente().getNome();
            } catch (Exception e) {
                System.out.println("entrou na excessÃ£o data nula: " + e.getMessage());
                
            }

            modelo.addRow(new Object[]{f.getCodigo(), hora, data, nome, f.getTipoConsulta()});
        }
        PainelRolagem.setViewportView(tabela);
    }

    public void carregarJTable() {

        try {
            ConsultaController cc = new ConsultaController();
            cc.gerarConsultaTudo(Calendario.getDate());
            System.out.println("CONSULTE O BANCO data: " + Calendario.getDate());
        } catch (Exception e) {
        }

    }
}
